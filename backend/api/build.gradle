plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.moodopa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // Porject Base Config
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
    // developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    // Web Config
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    // compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-web"
    // DB Config
    runtime 'org.hsqldb:hsqldb'
    runtime 'mysql:mysql-connector-java'
    //thymeleaf html5 닫기 오류 처리 라이브러리
    compile 'net.sourceforge.nekohtml:nekohtml:1.9.22'
    //thymeleaf html5
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}